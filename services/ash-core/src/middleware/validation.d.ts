import { Request, Response, NextFunction } from 'express';
export declare const handleValidationErrors: (req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>;
export declare const validateId: (import("express-validator").ValidationChain | ((req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>))[];
export declare const validateWorkspaceId: (import("express-validator").ValidationChain | ((req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>))[];
export declare const validateCreateOrder: (import("express-validator").ValidationChain | ((req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>))[];
export declare const validateAnalysisRequest: (import("express-validator").ValidationChain | ((req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>))[];
export declare const validatePaginationQuery: (import("express-validator").ValidationChain | ((req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>))[];
export declare const validateFileUpload: (import("express-validator").ValidationChain | ((req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>))[];
export declare const validateDashboardQuery: (import("express-validator").ValidationChain | ((req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>))[];
export declare const sanitizeSearchTerm: (term: string) => string;
export declare const sanitizeOrderNumber: (orderNumber: string) => string;
export declare const validateRateLimit: (windowMs: number, maxRequests: number) => (req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>;
export declare const sanitizeAIInput: (input: string) => string;
