========================================
ASHLEY AI - VERCEL DEPLOYMENT GUIDE
========================================

YOUR GENERATED SECRETS (Save these!):
=====================================
NEXTAUTH_SECRET=3m+lTdu21gGfqItEpZaYTBTLgVVpIJcMN1wg0fxnzJg=
JWT_SECRET=PbBXB94xaQ/ixP5TUQ586BsQJbbJLieLODw0pse1NiM=
ENCRYPTION_KEY=AwHb90Svsu0H0831cU7YvDKDBCmIIZ1y0foCXhk1Fkw=

========================================
STEP-BY-STEP DEPLOYMENT
========================================

BEFORE YOU START:
-----------------
[ ] Get PostgreSQL connection string from Neon.tech
    ‚Üí Go to: https://neon.tech
    ‚Üí Sign up / Login
    ‚Üí Create Project: "ashley-ai"
    ‚Üí Copy connection string (looks like: postgresql://user:pass@host/db)

DEPLOYMENT METHOD 1: Vercel CLI (Fastest)
------------------------------------------
1. Run: deploy-to-vercel.bat
2. Follow the prompts
3. Done!

DEPLOYMENT METHOD 2: GitHub Integration
----------------------------------------
1. Run: deploy-via-github.bat
2. In Vercel dashboard:
   - Import project from GitHub
   - Select repository: ashley-ai
   - Root Directory: services/ash-admin
   - Add environment variables (see below)
3. Click Deploy

DEPLOYMENT METHOD 3: Manual Upload
-----------------------------------
1. Go to: https://vercel.com/new
2. Click "Import Git Repository"
3. Authorize GitHub
4. Select: AshAI-Sys/ashley-ai
5. Configure Project:
   ‚îú‚îÄ Root Directory: services/ash-admin
   ‚îú‚îÄ Framework: Next.js (auto-detected)
   ‚îî‚îÄ Build Settings: (use defaults from vercel.json)
6. Click "Environment Variables"
7. Add these variables (see section below)
8. Click "Deploy"

========================================
ENVIRONMENT VARIABLES TO ADD
========================================

Copy these into Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables:

Name: DATABASE_URL
Value: postgresql://YOUR_USER:YOUR_PASSWORD@YOUR_HOST/YOUR_DB?sslmode=require
Environments: ‚òë Production ‚òë Preview ‚òë Development

Name: NEXTAUTH_SECRET
Value: 3m+lTdu21gGfqItEpZaYTBTLgVVpIJcMN1wg0fxnzJg=
Environments: ‚òë Production ‚òë Preview ‚òë Development

Name: JWT_SECRET
Value: PbBXB94xaQ/ixP5TUQ586BsQJbbJLieLODw0pse1NiM=
Environments: ‚òë Production ‚òë Preview ‚òë Development

Name: ENCRYPTION_KEY
Value: AwHb90Svsu0H0831cU7YvDKDBCmIIZ1y0foCXhk1Fkw=
Environments: ‚òë Production ‚òë Preview ‚òë Development

Name: NEXTAUTH_URL
Value: https://YOUR-APP-NAME.vercel.app
Environments: ‚òë Production ‚òë Preview ‚òë Development
NOTE: Update this after deployment with actual URL!

Name: NODE_ENV
Value: production
Environments: ‚òë Production

Name: APP_URL
Value: https://YOUR-APP-NAME.vercel.app
Environments: ‚òë Production ‚òë Preview ‚òë Development
NOTE: Update this after deployment with actual URL!

========================================
AFTER DEPLOYMENT
========================================

1. Get your deployment URL from Vercel
   Example: https://ashley-ai-xyz123.vercel.app

2. Update environment variables:
   ‚Üí Go to Settings ‚Üí Environment Variables
   ‚Üí Edit NEXTAUTH_URL ‚Üí paste your actual URL
   ‚Üí Edit APP_URL ‚Üí paste your actual URL
   ‚Üí Save

3. Redeploy:
   ‚Üí Go to Deployments tab
   ‚Üí Click "..." on latest deployment
   ‚Üí Click "Redeploy"

4. Test your app:
   ‚Üí Visit your Vercel URL
   ‚Üí Try logging in
   ‚Üí Check dashboard loads

========================================
TROUBLESHOOTING
========================================

‚ùå Build fails with "Can't reach database"
   ‚Üí Check DATABASE_URL is set in environment variables
   ‚Üí Verify PostgreSQL connection string is correct
   ‚Üí Ensure ?sslmode=require is at the end

‚ùå "Prisma Client not found"
   ‚Üí Redeploy with "Clear Build Cache" enabled
   ‚Üí Deployments ‚Üí ... ‚Üí Redeploy ‚Üí ‚òë Clear Build Cache

‚ùå Login doesn't work
   ‚Üí Verify NEXTAUTH_URL matches your actual Vercel URL
   ‚Üí No trailing slash in URL
   ‚Üí Update and redeploy

‚ùå Environment variable not found
   ‚Üí Double-check spelling in Vercel dashboard
   ‚Üí Ensure "Production" is checked
   ‚Üí Redeploy after adding variables

========================================
QUICK COMMANDS
========================================

# Install Vercel CLI
npm install -g vercel

# Login
vercel login

# Deploy
vercel --prod

# Check deployment logs
vercel logs

# List environment variables
vercel env ls

========================================

Need help? Check:
- DEPLOYMENT_CHECKLIST.md
- VERCEL_DEPLOYMENT.md

Ready to deploy! üöÄ
