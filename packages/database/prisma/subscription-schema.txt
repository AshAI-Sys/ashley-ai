// ============================================
// SUBSCRIPTION & BILLING SYSTEM
// ============================================

// Subscription Plans - Define available tiers
model SubscriptionPlan {
  id                String   @id @default(cuid())
  name              String   // STARTER, PROFESSIONAL, ENTERPRISE, CUSTOM
  display_name      String   // "Professional Plan"
  description       String?
  stripe_price_id   String?  @unique // Stripe Price ID
  stripe_product_id String?  // Stripe Product ID
  price_monthly     Float    // Monthly price in cents
  price_annual      Float?   // Annual price in cents (with discount)
  billing_interval  String   // MONTHLY, ANNUAL
  currency          String   @default("USD")
  is_active         Boolean  @default(true)
  is_popular        Boolean  @default(false)

  // Limits
  max_orders        Int?     // null = unlimited
  max_users         Int?
  max_clients       Int?
  max_storage_gb    Int?
  max_api_calls     Int?

  // Feature flags (JSON string)
  features          String   // JSON: {finance: true, hr: true, ai: 'basic', automation: 'limited'}

  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  // Relations
  subscriptions     Subscription[]

  @@index([is_active])
  @@index([name])
  @@map("subscription_plans")
}

// Customer Subscriptions
model Subscription {
  id                    String   @id @default(cuid())
  workspace_id          String   @unique // One subscription per workspace
  plan_id               String
  stripe_subscription_id String? @unique
  stripe_customer_id    String?

  status                String   // ACTIVE, TRIALING, PAST_DUE, CANCELED, INCOMPLETE
  trial_ends_at         DateTime?
  current_period_start  DateTime
  current_period_end    DateTime
  cancel_at_period_end  Boolean  @default(false)
  canceled_at           DateTime?

  // Usage tracking
  orders_used           Int      @default(0)
  users_used            Int      @default(0)
  clients_used          Int      @default(0)
  storage_used_gb       Float    @default(0)
  api_calls_used        Int      @default(0)

  // Reset counters monthly
  usage_reset_at        DateTime @default(now())

  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  // Relations
  workspace             Workspace         @relation(fields: [workspace_id], references: [id])
  plan                  SubscriptionPlan  @relation(fields: [plan_id], references: [id])
  invoices              Invoice[]
  usage_logs            UsageLog[]

  @@index([workspace_id])
  @@index([plan_id])
  @@index([status])
  @@index([current_period_end])
  @@index([stripe_subscription_id])
  @@map("subscriptions")
}

// Invoices generated by Stripe
model Invoice {
  id                    String   @id @default(cuid())
  subscription_id       String
  workspace_id          String
  stripe_invoice_id     String?  @unique

  invoice_number        String   @unique
  status                String   // DRAFT, OPEN, PAID, VOID, UNCOLLECTIBLE

  amount_due            Float    // Total amount due in cents
  amount_paid           Float    @default(0)
  amount_remaining      Float

  subtotal              Float    // Before tax
  tax                   Float    @default(0)
  total                 Float    // Final amount

  currency              String   @default("USD")

  billing_reason        String?  // SUBSCRIPTION_CREATE, SUBSCRIPTION_CYCLE, SUBSCRIPTION_UPDATE, MANUAL
  description           String?

  period_start          DateTime
  period_end            DateTime

  due_date              DateTime?
  paid_at               DateTime?
  voided_at             DateTime?

  pdf_url               String?  // Link to PDF invoice
  hosted_invoice_url    String?  // Stripe-hosted invoice page

  // Line items (JSON)
  line_items            String   // JSON array of invoice items

  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  // Relations
  subscription          Subscription @relation(fields: [subscription_id], references: [id])
  workspace             Workspace    @relation(fields: [workspace_id], references: [id])
  payments              Payment[]

  @@index([subscription_id])
  @@index([workspace_id])
  @@index([status])
  @@index([due_date])
  @@index([created_at])
  @@index([stripe_invoice_id])
  @@map("invoices")
}

// Payments made by customers
model Payment {
  id                    String   @id @default(cuid())
  invoice_id            String
  workspace_id          String
  stripe_payment_intent_id String? @unique

  amount                Float    // Amount in cents
  currency              String   @default("USD")
  status                String   // SUCCEEDED, PROCESSING, FAILED, CANCELED

  payment_method        String?  // CARD, ACH, WIRE
  payment_method_brand  String?  // visa, mastercard, amex
  payment_method_last4  String?  // Last 4 digits

  receipt_url           String?  // Link to receipt
  failure_message       String?  // Error message if failed

  paid_at               DateTime?
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  // Relations
  invoice               Invoice   @relation(fields: [invoice_id], references: [id])
  workspace             Workspace @relation(fields: [workspace_id], references: [id])

  @@index([invoice_id])
  @@index([workspace_id])
  @@index([status])
  @@index([paid_at])
  @@index([stripe_payment_intent_id])
  @@map("payments")
}

// Usage tracking for metering and overage charges
model UsageLog {
  id                String   @id @default(cuid())
  subscription_id   String
  workspace_id      String

  usage_type        String   // ORDERS, USERS, CLIENTS, STORAGE, API_CALLS
  quantity          Int      // Number of units used
  description       String?

  period_start      DateTime
  period_end        DateTime

  created_at        DateTime @default(now())

  // Relations
  subscription      Subscription @relation(fields: [subscription_id], references: [id])
  workspace         Workspace    @relation(fields: [workspace_id], references: [id])

  @@index([subscription_id])
  @@index([workspace_id])
  @@index([usage_type])
  @@index([created_at])
  @@index([period_start, period_end])
  @@map("usage_logs")
}

// Payment methods stored for future use
model PaymentMethod {
  id                    String   @id @default(cuid())
  workspace_id          String
  stripe_payment_method_id String @unique

  type                  String   // CARD, ACH, BANK_TRANSFER
  is_default            Boolean  @default(false)

  // Card details
  card_brand            String?  // visa, mastercard, amex
  card_last4            String?
  card_exp_month        Int?
  card_exp_year         Int?

  // Bank details (if ACH)
  bank_name             String?
  bank_last4            String?

  billing_email         String?
  billing_name          String?
  billing_address       String?  // JSON

  is_active             Boolean  @default(true)
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  // Relations
  workspace             Workspace @relation(fields: [workspace_id], references: [id])

  @@index([workspace_id])
  @@index([is_default])
  @@index([stripe_payment_method_id])
  @@map("payment_methods")
}

// Billing events and webhooks from Stripe
model BillingEvent {
  id                String   @id @default(cuid())
  workspace_id      String?
  stripe_event_id   String   @unique

  event_type        String   // invoice.paid, customer.subscription.updated, etc.
  event_data        String   // Full JSON payload from Stripe

  processed         Boolean  @default(false)
  processed_at      DateTime?
  error_message     String?

  created_at        DateTime @default(now())

  // Relations
  workspace         Workspace? @relation(fields: [workspace_id], references: [id])

  @@index([workspace_id])
  @@index([event_type])
  @@index([processed])
  @@index([created_at])
  @@index([stripe_event_id])
  @@map("billing_events")
}

// Coupons and promotions
model Coupon {
  id                String   @id @default(cuid())
  stripe_coupon_id  String?  @unique

  code              String   @unique
  name              String
  description       String?

  discount_type     String   // PERCENTAGE, FIXED_AMOUNT
  discount_value    Float    // Percentage (25 = 25%) or amount in cents

  currency          String?  @default("USD") // For fixed amount discounts
  duration          String   // ONCE, REPEATING, FOREVER
  duration_months   Int?     // For repeating

  max_redemptions   Int?     // null = unlimited
  redemptions_count Int      @default(0)

  valid_from        DateTime @default(now())
  valid_until       DateTime?

  is_active         Boolean  @default(true)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  // Relations
  redemptions       CouponRedemption[]

  @@index([code])
  @@index([is_active])
  @@index([valid_from, valid_until])
  @@map("coupons")
}

// Track coupon usage
model CouponRedemption {
  id                String   @id @default(cuid())
  coupon_id         String
  workspace_id      String
  subscription_id   String?

  discount_amount   Float    // Actual discount applied in cents

  redeemed_at       DateTime @default(now())

  // Relations
  coupon            Coupon    @relation(fields: [coupon_id], references: [id])
  workspace         Workspace @relation(fields: [workspace_id], references: [id])

  @@index([coupon_id])
  @@index([workspace_id])
  @@index([redeemed_at])
  @@map("coupon_redemptions")
}
