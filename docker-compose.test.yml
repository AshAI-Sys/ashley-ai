version: '3.8'

services:
  # Test Database - PostgreSQL
  test-db:
    image: postgres:16-alpine
    container_name: ashley-ai-test-db
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: ashley_ai_test
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - test-db-data:/var/lib/postgresql/data
      - ./tests/setup/init-test-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d ashley_ai_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ashley-test-network

  # Test Redis - For caching and sessions
  test-redis:
    image: redis:7-alpine
    container_name: ashley-ai-test-redis
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    command: redis-server --appendonly yes
    volumes:
      - test-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - ashley-test-network

  # Test Server (optional - can run tests against this)
  test-app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: ashley-ai-test-app
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://test_user:test_password@test-db:5432/ashley_ai_test
      REDIS_URL: redis://test-redis:6379
      JWT_SECRET: test_jwt_secret_key_for_testing_only
      PORT: 3001
    ports:
      - "3002:3001"  # Map to 3002 to avoid conflicts with dev server
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    networks:
      - ashley-test-network
    command: sh -c "npx prisma migrate deploy && npm run dev"

volumes:
  test-db-data:
    driver: local
  test-redis-data:
    driver: local

networks:
  ashley-test-network:
    driver: bridge
