# Ashley AI - Monitoring & Logging Stack
version: '3.8'

services:
  # Application logging with Loki
  loki:
    image: grafana/loki:2.9.0
    container_name: ashley-ai-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ashley-ai-network

  # Metrics collection with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ashley-ai-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ashley-ai-network

  # Visualization with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: ashley-ai-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - ashley-ai-network

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: ashley-ai-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - ashley-ai-network

  # PostgreSQL Exporter for database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: ashley-ai-postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://ashley_admin:${POSTGRES_PASSWORD}@postgres:5432/ashley_ai_prod?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - ashley-ai-network

  # Error tracking with Sentry (self-hosted)
  sentry-redis:
    image: redis:7-alpine
    container_name: ashley-ai-sentry-redis
    restart: unless-stopped
    networks:
      - ashley-ai-network

  sentry-postgres:
    image: postgres:15-alpine
    container_name: ashley-ai-sentry-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sentry
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: ${SENTRY_DB_PASSWORD}
    volumes:
      - sentry_postgres_data:/var/lib/postgresql/data
    networks:
      - ashley-ai-network

  sentry:
    image: sentry:latest
    container_name: ashley-ai-sentry
    restart: unless-stopped
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_POSTGRES_PORT: 5432
      SENTRY_DB_NAME: sentry
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD}
      SENTRY_REDIS_HOST: sentry-redis
      SENTRY_REDIS_PORT: 6379
    ports:
      - "9000:9000"
    depends_on:
      - sentry-redis
      - sentry-postgres
    networks:
      - ashley-ai-network

  # Uptime monitoring
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: ashley-ai-uptime
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - uptime_data:/app/data
    networks:
      - ashley-ai-network

volumes:
  loki_data:
  prometheus_data:
  grafana_data:
  sentry_postgres_data:
  uptime_data:

networks:
  ashley-ai-network:
    external: true